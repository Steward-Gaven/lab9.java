
import java.util.Scanner;
import static sun.font.GlyphLayout.done;

/**
 *
 * @author wulft
 */
public class SafeInput 
{
   public static String getNonZeroLenString(Scanner pipe, String prompt)
   {
       String result = "";
       boolean done = false;       
       do
       {
           System.out.print(prompt + ": ");
           result = pipe.nextLine();
           if(result.length() >= 1)
               done = true;
           else
               System.out.println("\nYou must enter at least one character!\nTry again!!!");
       }
       while(!done);    
       return result;
   }
    
   public static String getRegExString(Scanner pipe, String prompt, String regEx)
   {
       String result = "";
       boolean done = false;
       
       do
       {
           System.out.print(prompt + ": ");
           result = pipe.nextLine();
           if(result.matches(regEx))
               done = true;
           else
               System.out.println("\nMust match the pattern: " + result);
                      
       }while(!done);
               
       return result;
   }
   /**
    * returns an integer with no restrictions or bounds
    * @param pipe a Scanner instance to use for input
    * @param prompt tells the user what to enter
    * @return an int
    */
   public static int getInt(Scanner pipe, String prompt)
   {
       int result = 0;
       boolean done = false;
       String trash = "";
       
       do
       {
           System.out.print(prompt + ": ");
           if(pipe.hasNextInt())
           {
             result = pipe.nextInt();
             done = true;
           }
           else
           {
               trash = pipe.nextLine();           
               System.out.println("\nMust enter an int not: " + trash);
           }           
       }while(!done);
               
       return result;
   }
   
   public static double getDouble(Scanner pipe, String prompt)
   {
       double result = 0;
       boolean done = false;
       String trash = "";
       
       do
       {
           System.out.print(prompt + ": ");
           if(pipe.hasNextDouble())
           {
             result = pipe.nextDouble();
             done = true;
           }
           else
           {
               trash = pipe.nextLine();           
               System.out.println("\nMust enter an int not: " + trash);
           }           
       }while(!done);
               
       return result;
   } 
   
   /**
    * returns an int within a specified range
    * @param pipe Scanner to use for reading input
    * @param prompt tells the user what to input range is autogenerated [low - high]
    * @param low - lower bound of range inclusive
    * @param high - upper bound for range inclusive
    * @return an int within the specified inclusive range
    */
   public static int getRangedInt(Scanner pipe, String prompt, int low, int high)
   {   
       int result = 0;
       boolean done = false;
       String trash = "";
   
       do
       {
            System.out.print(prompt + " [" + low + " - " + high + "]: ");

            if(pipe.hasNextInt())
            {
                result = pipe.nextInt();
                pipe.nextLine(); // Clear the buffer 
                if(result >= low && result <= high)
                    done = true;
                else
                {
                    System.out.println("\nValue must be in range [" + low + " - " + high + "]: " + result);
                    System.out.println("Try again!");
                }                
            }
            else 
            {
                trash = pipe.nextLine();
                System.out.println("Enter a correct int value not: " + trash);
            }

       }while(!done);
       return result;
    }
   
   
   /**
    * 
    * @param pipe
    * @param prompt
    * @param low
    * @param high
    * @return 
    */
   public static double getRangedDouble(Scanner pipe, String prompt, double low, double high)
   {   
       double result = 0;
       boolean done = false;
       String trash = "";
   
       do
       {
            System.out.print(prompt + " [" + low + " - " + high + "]: ");

            if(pipe.hasNextDouble())
            {
                result = pipe.nextDouble();
                pipe.nextLine(); // Clear the buffer 
                if(result >= low && result <= high)
                    done = true;
                else
                {
                    System.out.println("\nValue must be in range [" + low + " - " + high + "]: " + result);
                    System.out.println("Try again!");
                }                
            }
            else 
            {
                trash = pipe.nextLine();
                System.out.println("Enter a correct double value not: " + trash);
            }

       }while(!done);
       return result;
    }
 
    public static boolean getYNConfirm(Scanner pipe, String prompt)
    {
        boolean result = false;
        String YNString = "";
        boolean done = false;
        
        do
        {
            System.out.print(prompt + " [Y/N]: ");
            YNString = pipe.nextLine();
            if(YNString.equalsIgnoreCase("Y"))
            {
                done = true;
                result = true;
            }
            else if(YNString.equalsIgnoreCase("N"))
            {
                done = true;
                result = false;
            }
            else
            {
                System.out.println("\nYou must enter a Y or an N not: " + YNString);
            }
        }while(!done);
        
        return result;
    }
}
